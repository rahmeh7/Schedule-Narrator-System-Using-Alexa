import { ResponseBuilder as ResponseHelper } from 'ask-sdk';
import { Directive, Intent, interfaces, ResponseEnvelope } from 'ask-sdk-model';
import { Adapter } from './adapter';
export declare class ResponseBuilder {
    _responseObject: ResponseEnvelope;
    protected responseHelper: ResponseHelper;
    constructor(adapter: Adapter);
    speak(speechOutput: string): this;
    listen(repromptSpeechOutput: string): this;
    cardRenderer(cardTitle: string, cardContent: string, cardImage?: {
        [key: string]: string;
    }): this;
    linkAccountCard(): this;
    askForPermissionsConsentCard(permissions: string[]): this;
    delegate(intent: Intent): this;
    elicitSlot(slotName: string, updatedIntent: Intent): this;
    confirmSlot(slotName: string, updatedIntent?: Intent): this;
    confirmIntent(updatedIntent: Intent): this;
    audioPlayerPlay(behavior: interfaces.audioplayer.PlayBehavior, url: string, audioToken: string, expectedPreviousToken: string, offsetInMilliseconds: number): this;
    audioPlayerStop(): this;
    audioPlayerClearQueue(clearBehavior: interfaces.audioplayer.ClearBehavior): this;
    renderTemplate(template: interfaces.display.Template): this;
    hint(hintText: string): this;
    playVideo(source: string, metadata?: {
        [key: string]: string;
    }): this;
    shouldEndSession(val: boolean): this;
    _addDirective(directive: Directive): this;
}
